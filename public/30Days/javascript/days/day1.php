<?php
$Name_Page = str_replace('.php' , '' , basename(__FILE__));
$Name_File = 'JavaScript';
?>
<!doctype html>
<html lang="fa" dir="rtl">
<head>
    <?php include MAIN_DIR . "public/Main/meta-main.php" ?>
    <link rel="stylesheet" href="<?= MAIN_SERVER . 'assets/css/FullStyle.css' ?>">  <!-- Style Main seed -->
    <link rel="stylesheet" href="<?= MAIN_SERVER . 'public/30Days/style.css' ?>">  <!-- Style This Page -->
    <link rel="stylesheet" href="<?= MAIN_SERVER . 'assets/vendor/prism.css' ?>">  <!-- Style Prism Library -->
    <title> <?= $Name_Page . ' ' . $Name_File ?>  </title>
</head>
<body>

<!-- HEADER -->
<?php require MAIN_DIR . "public/Main/Header.php" ?>
<!-- END HEADER -->


<!-- MAIN -->
<?php
// Number Of Day
$test = str_replace("day"  , '' , $Name_Page);
$test = [$test-1 , $test+1 , $test]; // 0 -> Pre  , 1 -> Nex , 2 -> Current
?>
<!-- Subject -->
<section class="container subject">
    <h1>
        <?= "$Name_File 30 Days" ?> (جاوا اسکریپت در 30 روز)
        -
        روز
        <?= $test[2] ?>
        <br>
        &gt;&gt;
        مقدمات اولیه
    </h1>
    <p>راهنمای قدم به قدم برای تبدیل شدن به برنامه نویس جاوا اسکریپت در <b>30 روز</b></p>
    <br>
    <div class="row options">
        <div class="col-xs-12 col-s-12 col-l-6">
            <a href="<?= MAIN_SERVER ?>">تمامی نقشه راه ها</a>
        </div>
        <div class="col-xs-12 col-s-12 col-l-6" style="text-align: left">
            <a href='<?= MAIN_GITHUB . "/issues/new?title=[Suggestion] $Name_File Developer - 30Days" ?>'
               target="_blank">پیشنهاد
                تغییر - نقشه راه بهتر</a>
        </div>
    </div>
    <section class="between">
        <hr class="between">
        <h2><a href="<?= MAIN_SITE ?>" target="_blank">Subscribe</a></h2>
        <h2><a href="<?= site_url($Name_File) ?>"><?= $Name_File ?></a></h2>
        <h2>Day <?= $test[2] ?></h2>
    </section>
</section>

<!-- Start Previous and Next Days -->
<div class="container Pre_Nex">
    <div class="row">
        <a href="<?='day'.$test[1]?>" class="col-xs-6 col-md-2">
            &rarr;
            روز بعدی (
            <?=$test[1] ?>
            )
        </a>
        <div class="xs-hidden col-md-8"></div>
    </div>
</div>
<!-- End Previous and Next Days -->

<br>
<!-- Start List -->
<section class="container list30days">
    <ul>
        <li><a href="#day-1"> 📔 روز اول </a>
            <ul>
                <li><a href="#introduction">معرفی</a></li>
                <li><a href="#requirements">الزامات</a></li>
                <li><a href="#setup">آماده سازی</a>
                    <ul>
                        <li><a href="#install-nodejs">نصب Node.js</a></li>
                        <li><a href="#browser">مرورگر</a>
                            <ul>
                                <li><a href="#installing-google-chrome">نصب گوگل کروم</a></li>
                                <li><a href="#opening-google-chrome-console">باز کردن کنسول گوگل کروم</a></li>
                                <li><a href="#writing-code-on-browser-console">نوشتن دستور در کنسول مروگر</a>
                                    <ul>
                                        <li><a href="#consolelog">دستور Console.log</a></li>
                                        <li><a href="#consolelog-with-multiple-arguments">Console.log با چندین
                                                آرگومان</a></li>
                                        <li><a href="#comments">کامنت (توضیحات)</a></li>
                                        <li><a href="#syntax"> سینتکس (قوانین نوشتاری)</a></li>
                                    </ul>
                                </li>
                                <li><a href="#arithmetics">محاسبات</a></li>
                            </ul>
                        </li>
                        <li><a href="#code-editor">ویرایشگر کد (کد ایتور)</a>
                            <ul>
                                <li><a href="#installing-visual-studio-code">نصب Visual Studio Code</a></li>
                                <li><a href="#how-to-use-visual-studio-code">نحوه استفاده از Visual Studio Code</a></li>
                            </ul>
                        </li>
                    </ul>
                </li>
                <li><a href="#adding-javascript-to-a-web-page">افزودن جاوا اسکریپت به صفحه وب</a>
                    <ul>
                        <li><a href="#inline-script">Inline Script (اسکریپت درون خطی)</a></li>
                        <li><a href="#internal-script">Internal Script (اسکریپت داخلی)</a></li>
                        <li><a href="#external-script">External Script (اسکریپت خارجی)</a></li>
                        <li><a href="#multiple-external-scripts">Multiple External Scripts (چند اسکریپتی خارجی)</a></li>
                    </ul>
                </li>
                <li><a href="#introduction-to-data-types">مقدمه ایی بر انواع داده</a>
                    <ul>
                        <li><a href="#numbers">Numbers (اعداد)</a></li>
                        <li><a href="#strings">Strings (رشته ها)</a></li>
                        <li><a href="#booleans">Booleans (درست یا نادرست)</a></li>
                        <li><a href="#undefined">Undefined (تعریف نشده)</a></li>
                        <li><a href="#null">Null (خالی)</a></li>
                    </ul>
                </li>
                <li><a href="#checking-data-types">بررسی انواع داده</a></li>
                <li><a href="#comments-again">کامنت فراموش نشه!</a></li>
                <li><a href="#variables">متغیر ها</a></li>
            </ul>
        </li>
        <li><a href="#day-1-exercises">💻 تمرینات روز اول </a></li>
    </ul>
</section>
<!-- End List -->

<!-- Start Article -->
<article class="container">
    <h1 id="day-1">روز اول :</h1>
        <h1 id="introduction">معرفی</h1>
            <div>
                <p>
                    سلام به شما دوستانی که تا اینجا اومدید تا در چالش 30 روزه برنامه نویسی جاوا اسکریپت شرکت کنید.
                    در این چالش مقدمات و همه چیز هایی که نیاز دارید تا جاوا اسکریپت کار شوید وجود دارد.
                    البته باید بدانید در 30 روز نمیتوان جاوا اسکریپت را به طور کامل آموزش دید ، اما به صورت کلی این چالش میتواند
                    شما را به حد قابل قبولی بالا ببرد و اگر صفر صفر باشید حتما با این چالش به حد قابل قبولی خواهید رسید
                    (برای دوستانی که تا حدی جاوا اسکریپت رو بلد هستند هم میتونن از این چالش برای یادگیری موثر استفاده کنند).
                    اگر میخواهید به ما کمک کنید یا چالش 30 روزه دیگری را اضافه کنید حتما به مخزن گیت هاب ما مراجع کنید.
                    <br>
                    جاوا اسکریپت یکی از زبان های وب است که هر روز فراگیر تر میشود و هم سمت سرور و هم سمت کاربر به خوبی
                    خودش را در دل برنامه نویسان جا کرده است!
                    در حال حاضر که جاوا اسکریپت محبوب ترین زبان برنامه نویسی است و از طراحی سایت تا بازی ها تحت وب
                    را پوشش میدهد ، پس یکی از زبان هایی است که اگر یاد بگیرد حتما به سود شما خواهد بود!
                    <br>
                    اگر سخت کوش نیستید و متن هارو نمیتونید دنبال کنید از همین الان بگم خسته نباشید ! برای برنامه نویس شدن
                    سخت کوش بودن خیلی مهمه و باید هرروز تمرین کنید و تمامی موارد را برای برنامه نویس شدن تکرار کنید.
                    اگر با متن ارتباط برقرار نمیکنید میتونید فیلم های آموزشی در جای جای نت رو دنبال کنید ولی چیز خوبی رو از دست دادید :(
                    <br>
                    و در آخر ذکر کنم که این نقشه راه 30 روزه از مخزن گیت هاب  <a style="color: red" href="https://github.com/Asabeneh/30-Days-Of-JavaScript/" target="_blank" rel="noopener noreferrer nofollow">ایشون</a> برداشته شده (سر فصل هاشو برداشتیم) و ترجمه و یه چیزایی بهش اضافه شده !
                    <br>
                    شاد و پیروز باشید :)
                </p>
            </div>
        <h1 id="requirements">الزامات</h1>
            <div>
                <p>برای یادگیری جاوا اسکریپت نیازی به دانش قبلی ندارید ، فقط موارد زیر رو داشته باشید !</p>
                <ol>
                    <li>انگیزه (که دارید!)</li>
                    <li>یک کامپیوتر (که اگه ندارید نصف عمرتون بر فناست!)</li>
                    <li>اینترنت (که به حق 5 تن و حکومت هنوز وصله!)</li>
                    <li>یک مرورگر (که حتما دارید)</li>
                    <li>یک ویرایشگر کد (که باهم نصب میکنیم)</li>
                </ol>
            </div>
        <h1 id="setup">آماده سازی</h1>
            <div>
                <p>با گوشی هم میشه برنامه نویسی کرد ، اما با کامپیوتر راحت ترید ، و یادتون باشه انگیزه داشته باشید وسایل زیاد مهم نیست !</p>
            </div>
            <h2 id="install-nodejs">نصب Node.js</h2>
                <div>
                    <p>
                        نمیخوام زیاد سخت بگیرما ، اما نود جی اس رو نصب کنید ، شاید الان نیاز نداشته باشید ولی بعدا حتما نیاز دارید از لینک زیر میتونید دانلود کنید.
                        <a href="https://nodejs.org/en" style="color: red">دانلودم کن</a>
                    </p>
                </div>
            <h2 id="browser">مرورگر</h2>
                <div>
                    <p>میدونم مرورگر های زیادی وجود دارند و میتونید هر کدوم که خواستید رو نصب کنید ، اما من پیشنهادم اینه که کروم رو نصب کنید</p>
                </div>
                <h3 id="installing-google-chrome">نصب گوگل کروم</h3>
                    <div>
                        <p>
                            اگر مرورگر ندارید ، که امکان نداره نداشته باشید ، گوگل کروم رو از سایت خودش دانلود کند بازم برای راحتی شما لینکش این پایینه !
                            <br>
                            <a href="https://www.google.com/chrome/">مرورگرم ، دانلودم کن !</a>
                        </p>
                    </div>
                <h3 id="opening-google-chrome-console">باز کردن کنسول گوگل کروم</h3>
                    <div>
                        <p>برای اینکه اولین کدامون رو اجرا کنیم میتونیم از کنسول توسعه خود مرورگر استفاده کنیم ، و برای استفاده از اون 3 تا راه داریم (چقدرم زیاد)</p>
                        <ol>
                            <li>سه نقطه سمت راست مروگر و More tools -> Developer tools</li>
                            <li>کلیک راست کنید و inspect رو بزنید</li>
                            <li>یا کنترل + شیفت + C رو بزنید (چنگدر آسون)</li>
                            <li>اگر هم مک دارید از Command + Option + J استفاده کنید!</li>
                        </ol>
                        <p>بعد از باز کردن کنسول به بخش Console برید ، ما کدامونو اینجا وارد میکنیم (برای اطلاعات بیشتر میتونید سرچ کنید تا بفهمید بقیه تب ها داستانشون چیه)</p>
                    </div>
                <h3 id="writing-code-on-browser-console">نوشتن دستور در کنسول مروگر</h3>
                    <div>
                        <p> برای اینکه بتونید مستقیما کنسول روباز کنید میتونید توی ویندوز کنترل + شیفت + I رو بزنید (توی مک هم این : Command + Option + I)</p>
                    </div>
                    <h4 id="consolelog">دستور Console.log</h4>
                        <div>
                            <p>اولین دستوری که میخوایم یاد بگیریم Console.log هست (من که ذوق دارم باز ، شما چطور ؟)</p>
                            <p>این دستور یک تابع داخلیه (ینی از قبل داخل زبان تعریف شده) و شما میتونید بهش مقداری رو پاس بدید و اونو توی کنسول براتون چاپ میکنهههه.</p>
                            <pre>
                                <code>
                                    console.log('Hello, World!')
                                </code>
                            </pre>
                            <p>کد بالا برای شما Hello World رو توی کنسول چاپ میکنه.</p>
                        </div>
                    <h4 id="consolelog-with-multiple-arguments">Console.log با چندین آرگومان</h4>
                        <div>
                            <p> تابع بالا میتواند چندین آرگومان هم بگیرد (آرگومان به متغیر هایی میگیم که داخل پرانتز پاس میدیم!) مثال زیر رو ببیند : </p>
                            <pre>
                                <code>
                                    console.log('Hello', 'World', '!')
                                    console.log('HAPPY', 'NEW', 'YEAR', 1402)
                                    console.log('Salam', 'Be', 'To', 'Ke', 'Ino', 'Mikhoni')
                                </code>
                            </pre>
                            <p>به هر تعداد آرگومانی که اضافه کنید ، متن ها پشت هم نوشته میشن!(میشه گفت آرگومان ها با یک فاصله بینشان بهم متصل میشن)</p>
                        </div>
                    <h4 id="comments">کامنت (توضیحات)</h4>
                        <div>
                            <p>
                                شما میتونید به کداتون کامنت اضافه کنید! (حالا کامنت یعنی چی ؟)
                                یعنی میتونید توضیحات کد خودتونو اضافه کنید ، حالا میپرسید چرا باید همچین کاری کنیم ؟
                                خب معلومه ، بعضی وقتا کدامون انقدر طولانی میشن یا پیچیده که نمیفهمیم چیکار میکنن ، پس کامنت میزاریم تا
                                حواسمون باشه کدامون برای چه کاری ساخته شده اند یا نکات مهم رو یادآوری کنن بهمون !
                                <br>
                                از دو روش میتونید کامنت بزارید ، یا میتونید اولش دوتا اسلش (//) بزارید ، یا اینکه اول و آخرش رو ستاره اسلش بزارید (/* */) به مثال زیر دقت کنید :)
                            </p>
                            <pre>
                                <code>
                                    روش اول (فقط همون خط کامنت میشه)
                                    // This is the first comment
                                    // This is the second comment
                                    // I am a single line comment

                                    روش دوم (میتونید چند خط رو کامنت کنید)
                                    /*
                                    Line One
                                    Line Two
                                    */
                                </code>
                            </pre>
                        </div>
                    <h4 id="syntax">سینتکس (قوانین نوشتاری)</h4>
                    <div>
                        <p>
                            احتمالا کلمه سینتکس رو قبلا شنیدید ، اگر هم نشنیدید اشکالی نداره الان براتون توضیح میدم منظورمون از سینتکس یا قوانین نوشتاری چیه.
                            من الان به زبان فارسی دارم مینویسم (زبان فارسی محاوره ایی) اگر جای فعل و فاعل رو عوض کنم یا بجای حروف از حروف دیگه ایی استفاده کنم (مثلا به جای سلام بگم ضلام) صد در صد ، منظور حرفمو بقیه نمیفهمن ،
                            توی زبان برنامه نویسی هم همینه ! شما باید قوانین هر زبان رو رعایت کنید ، مثلا توی مثال قبلی ، نمیتونید بنویسد log.console() چون از نظر قواعدی
                            اشتباعه ، کامپیوتر هم مثل انسان نیست و به همین راحتی با این اشتباهات کنار نمیاد و بهتون خطا میده !!
                            میتونید توی کنسول تست کنید و ببنید که راست میگم :(
                            <br>
                            اگر در نحوه نوشتار خطا داشته باشیم ، خود کنسول خطا رو پیدا میکنه و بهمون میگه که خطا بخاطر چیه ، و
                            همین کار کنسول خیلی بهمون کمک میکنه تا از 0 تا 100 کدمونو نگاه نندازیم تا خطا رو پیداکنیم.(البته خطاهای متفاوتی داریم که فعلا بررسی نمیکنم ولی اون خطاها به همین راحتی قابل پیگیری نیستن :( )
                            <br>
                            تا یادم نرفته بگم ، به پیدا کردن خطا و درست کردنش میگن دیباگینگ یا خطایابی ، همچنین در دستوری که تا الان یاد گرفتیم
                            چیزی که میخوایم توی کنسول چاپ بشه باید داخل پرانتز باشه و همچنین داخل تک کوتیشن (') یا دابل کوتیشن (") قرار بگیره!
                        </p>
                    </div>
                <h3 id="arithmetics">محاسبات</h3>
                    <div>
                        <p>
                            تا الان یاد گرفتیم یچیزی روی صفحه نمایش بدیم ، مثل متن خوش آمد یا هرچیزی که مد نظرمونه ، اما فقط این نیست !
                            شما میتونید به جای وارد کردن متن (که توی برنامه نویسی بهش میگیم رشته (چون رشته ایی از کارکتر هاست))
                             میتونیم از اعداد هم استفاده کنیم (غیب گفتم !) ، منظورم اینه که میتونیم ضرب کنیم ، تقسیم کنیم ، جمع کنیم و
                            کار هایی رو بکنیم که با ماشین حساب انجام میشه!
                             شما توی کنسول مرورگر میتویند بدون نوشتن تابع (یعنی 1 + 10) و زدن اینتر محاسبات رو ببنید ، اما
                            در کد نویسی حتما باید از تابع استفاده کنید و تابع هم یکم قبل تر گفتم چیه (فراموش ک نکردی ؟) ؛
                            چنتا مثال براتون این زیر گذاشتم
                        </p>
                        <pre>
                            <code>
                                console.log(85 + 85)    //Adad Moghadas + Adad Moghadas
                                console.log(13 - 1)
                                console.log(15 / 3)
                                console.log(69 - 0)     //Yad chizi ke nauftadi ?
                            </code>
                        </pre>
                        <p>مثال های بالا چندین مورد از محاسبات بود و اگر دقت کنید ، میبینید که برای محاسبات نیازی به داخل تک کوتیشن یا دابل کوتیشن قرار دادن نداشتیم!</p>
                        <ol>
                            چنتا از عملگرهایی که با حالت ریاضی معمولی فرق دارن رو براتون لیست کردم (ازم تشکر کنید)
                            <li> (*) معنای ضرب رو میده</li>
                            <li> (-) معنی همون منهای خودمون</li>
                            <li> (+) معنی همون جمع خودمون</li>
                            <li> (%) باقی مونده تقسیم رو بر میگردونه</li>
                            <li> (/) اینم تقسیم میکنه</li>
                            توی همه موارد بالا مقدار سمت چپ روش عملیات اجرا میشه
                        </ol>
                    </div>
            <h2 id="code-editor">ویرایشگر کد (کد ایتور)</h2>
                <div>
                    <p>
                        تا فعلا یه چیزایی یاد گرفتیم ، اما کافی نیست و نمیتونیم همیشه روی کنسول کد بنویسیم (یعنی اصلا نمیشه!) ،
                        پس نیاز به یک ادیتور داریم تا پروژه خودمون رو اونجا شروع کنیم و هم دستمون باز تر باشه هم به کمک ابزار هاش
                        بتونیم سریعتر کدنویسی کنیم ! یکی از بهترین و سبک ترین ادیتور ها ویژال استودیو کده که یه سرچ کوجولو بزنید متوجه میشید چی میگم :)
                    </p>
                </div>
                <h3 id="installing-visual-studio-code">نصب Visual Studio Code</h3>
                    <div>
                        <p>
                            حقیقتا من جزو فن های ویژال استودیو کد نیستم و از ادیتور های دیگه ایی استفاده میکنم
                            ولی به چند دلیل ویژال استودیو میتونه براتون خوب باشه ؛ یک اینکه رایگان و متن بازه (یعنی میتونید تو توسعه اش کمک کنید)
                            ، دو اینکه ابزار های خیلی مفیدی داره که بهتون کمک میکنه ، سه اینکه نصبشم 4 تا نکست نکست داره و نیازی به کرک هم نیست :)
                            <br>
                            من بازم لینکشو این جلو گذاشتم برید دانلود کنید (من چقدره خوبم آخه) : <a href="https://code.visualstudio.com/">ویژال استودیو</a>
                        </p>
                    </div>
                <h3 id="how-to-use-visual-studio-code">نحوه استفاده از Visual Studio Code</h3>
                    <div>
                        <p>
                             زیاد نمیخوام وقتتونو با آموزش ویژال استودیو هدر بدم فقط بگم که جایی به مشکل خوردید گوگل کنید ،
                            نصبش که خیلی آسونه و وقتی بازش کردید (دوبار کلیک کنید!مثلا بلد نیستید) همون قسمت بالا نوشته Add Folder روش میزنید
                            یک مسیر انتخاب میکنید و پروژه تون رو توی اون مسیر شروع میکنید ، به همین راحتی.
                            <br>
                            از قسمت افزونه ها هم میتونید چنتا افزوونه دانلود و نصب کنید تا کارتون یکم راحت بشه (از منوی سمت چپ برنامه میتونید بخش پلاگین رو انتخاب کنید)
                        </p>
                        <ol>
                            <li>افزونه Live Server : بدون ریفرش صفحه به صورت ریئل تایم (زنده) میتونید تغیرات رو مشاهده کنید</li>
                            <li>توی همون افزونه ها javaSCript رو سرچ کنید خیلی از موارد مختلف میاد ، که میتونید بخونید و اگر نیاز داشتید نصب کنید.</li>
                        </ol>
                    </div>
        <h1 id="adding-javascript-to-a-web-page">افزودن جاوا اسکریپت به صفحه وب</h1>
            <div>
                <p>
                    اینجا با کنسول مرورگر خیلی فرق داره! پس باید حواستون باشه رو هوا نمیتونید کد بزنید و اجرا کنید !
                    چند روش موجوده برای استفاده از جاوا اسکریپت به صفحه وب که در زیر کامل توضیح دادم . (بغل جاوا اسکریپت یکم html و css هم یاد بگیرید بد نیست (خیلی سخت نیست!)،بعدا حتما نیازتون میشه و الان هم درک بهتری میتونید پیدا کنید اگه بلد باشید - پشنهاد من اینه که اول اونارو یاد بگیرید تا جلوتر به مشکل نخورید چون تا حدودی html و css پیشنیاز جا.ا اسکریپت هستند)
                    <br>
                    بازم دلم نیومد به امان خدا ولتون کنم و یه توضیح ریزی میدم برای اونایی که نمیدونن! HTML یک زبان نشانه گذاریه (زبان برنامه نویسی حساب نمیشه چون محاسبات نمیکنه و فقط نشانه بندی میکنه) ،
                    و با استفاده از این زبان میتونید صفحات مختلف وب رو بسازید (البته بدون استفاده از CSS واقعا ظاهر مناسبی برای جذب نداره!)
                    HTML به کمک برچسب‌‌ها (Tags) عناصر مختلف را کنار هم میچینه و هر کاربر با توجه به نیاز خودش از اونا استفاده میکنه. شاید بپرسید تگ چیه؟ تگ‌ها عناصری هستند که وظایف گوناگونی دارن و با فراخوانی هر کدومشون کارشون شروع میشه و با بستن تگ کارشون تمام میشه. مثلا برای نوشتن پاراگراف‌ها در زبان HTML از تگ p استفاده میشه و زمانی که پاراگراف تمام بشه، تگ هم بسته می‌شود. همچنین برای نشان دادن لینک‌ها از تگ a استفاده میشه. برای مثال :
                </p>
                <pre>
                    <code class="language-html">
                        &lt;a href="https://road-map.ir"> Ye Link Sadeh &lt;/a>
                    </code>
                </pre>
            </div>
            <h2 id="inline-script">Inline Script (اسکریپت درون خطی)</h2>
                <div>
                    <p>
                         یه پوشه روی دسکتاپ یا هرجا دوست دارید بسازید و یه اسمی روش بزارید و داخل ویژال استودیو کد باز کنید ، داخلش یه فایل بسازید به نام index.html (با همون ویژال استودیو کد میتونید فایل جدید ایجاد کنید)
                        بعدش کد زیر رو توش کپی کنید تا بگم قضیه چیه !
                    </p>
                    <pre>
                        <code class="language-html">
                            &lt;!DOCTYPE html>
                            &lt;html lang="fa">
                            &lt;head>
                                &lt;title>Test&lt;/title>
                            &lt;/head>
                            &lt;body>
                                 &lt;button onclick="alert('Welcome to 30DaysOfJavaScript!')">Click Me&lt;/button>
                            &lt;/body>
                            &lt;/html>
                        </code>
                    </pre>
                    <p>
                        توی فایل بالا یک فایل html با یک اسکریپت درون خطی داریم (درون خطی همونطوری که از اسمش معلومه ینی به طور مستقیم درون html به کار میره)
                        در دستورات بالا ، alert("Welcome to #0DaysOfJavaScript") یک دستور درون خطی جاوا اسکریپت است (این دستور براتون جدیده و مثل دستور قبلی یچیزی چاپ میکنه ولی ایندفعه روی کنسول نه! بلکه به صورت هشدار روی مرورگر نمایش داده میشه ، میتونید خودتون تست کنید یا روی لینک زیر کلیک کنید تا متوجه بشید :)
                        <br>
                        <a href="javascript:void(0)" onclick="alert('اینگونه هشدار میدهیم !')">کلیک کن روم ببین</a>
                        <br>
                        یه توضیحی کلی در مورد فایل html هم بدم برای دوستانی که نمیدونن این فایل اصلا چیه : یه سرچ کنید متوجه میشید اما من بازم میگم ،
                        یک فایل به نام index.html بسازید (فرمت .html برای زبان html هست که واقعا نیازی نبود بگم)
                        دستورات بالا چند تگ مهم دارند (خط اول ورژن html رو مشخص میکنه) ، تگ html پدر همه ی تگ هاست و اتربیوت (ویژگی داخل تگ) lang زبان این صفحه رو معرفی میکنه که fa مخفف فارسیه ،
                        بقیه تگ ها ، همه داخل تگ html هستند (به قولی این تگ پدر همه پدر هاست) ، تگ head همونجوری که از اسمش معلومه تگ سره (تگی که داخلش لینک دهی ها انجام میشه و به طور کلی محتوا توش قرار نمیگیره!)
                        داخل این تگ ، تگی به نام title قرار داره که اسم این صفحه رو مشخص میکنه (هر تبی که روی مرورگر باز میکنید یه اسمی داره ، این همون اسمه!)
                        مهم ترین تگ بعد از تگ head یعنی body قرار داره و تمام محتوای قابل مشاهده توی این قسمت قرار میگیره که ما
                        فعلا داخلش یه تگ button گذاشتیم که یه دکمه ایجاد میکنه و روش نوشته Click Me و همچنین یه اتربیوت به نام onclick داره که یعنی هروقت روی من کلیک شد فلان کار رو انجام بده (توی دستور بالا هم وقتی روی دکمه کلیک میکنی یه هشدار باز میشه که توش نوشته Welcome to 30DaysOfJavaScript )
                    </p>
                </div>
            <h2 id="internal-script">Internal Script (اسکریپت داخلی)</h2>
                <div>
                    <p>
                        یکی دیگه از روش های اجرای کد جاوا اسکریپت به صورت داخلیه ، روش قبلی شما رو محدود میکنه به چندین دستور یا کار مشخص (که پیشنهادم میشه زیاد استفاده نشه)
                        اما این روش و روش های بعدی بیشتر استفاده میشن ؛ توی این روش دستورات خودمون رو در قسمت تگ head قرار میدیم (البته بعضی وقتا در انتهای تگ body هم استفاده میشه)
                        و یادتون نره این دستورات رو باید بین تگ script قرار بدیم تا کار کنه !
                    </p>
                    <pre>
                        <code class="language-html">
                            &lt;!DOCTYPE html>
                            &lt;html lang="fa">
                            &lt;head>
                                &lt;title>Test&lt;/title>
                            &lt;script>
                                console.log('Welcome to 30DaysOfJavaScript')
                            &lt;/script>
                            &lt;/head>
                            &lt;body>&lt;/body>
                            &lt;/html>
                        </code>
                    </pre>
                    <p>
                        دستور بالا با هر بار باز کردن index.html باعث میشه ، توی کنسول مرورگر Welcome to 30DaysOfJavaScript چاپ بشه ، میتونید خودتون تست کنید و مشاهده کنید ؛
                        البته بازم گوشزد میکنم که بیشتر در قسمت بدنه از این روش استفاده میشه مثل مثال زیر :
                    </p>
                    <pre>
                        <code class="language-html">
                            &lt;!DOCTYPE html>
                            &lt;html lang="fa">
                            &lt;head>
                                &lt;title>Test&lt;/title>
                            &lt;/head>
                            &lt;body>
                            &lt;script>
                                console.log('Welcome to 30DaysOfJavaScript')
                            &lt;/script>
                            &lt;/body>
                            &lt;/html>
                        </code>
                    </pre>
                    <p>در اینجا تگ script در داخل تگ body قرار گرفته و هردو کد به خوبی اجرا میشن و یک بازخورد رو دارن!</p>
                </div>
            <h2 id="external-script">External Script (اسکریپت خارجی)</h2>
                <div>
                    <p>
                        یکی دیگه از روش هایی که خیلی خوبه و باعث میشه کد نویسی منظم تر باشه ، اینه که شما یک فایل جدا با پسوند .js ایجاد میکنید
                        و در آخر اون فایل رو به پروژه خودتون الصاق (وصل) میکنید، یک فایل داخل پوشه خودتون به نام basic.js ایجاد کنید و دستورات پایینو توش بزارید! (کلا هر فایلی با فرمت js. به معنی فایل جاوا اسکریپته)
                    </p>
                    <pre>
                        <code>
                            console.log('Salam');
                        </code>
                    </pre>
                    <p>
                         حالا باید توی فایل index.html خودتون که صفحه اصلیتون حساب میشه ، این فایل جدا رو متصل کنید (وقتی راه ارتباطی ندارن ، خب معلومه که کارم نمیکنه!) ، به صورت زیر میتونید فایل رو متصل کنید :
                    </p>
                    <pre>
                        <code class="language-html">
                            &lt;!DOCTYPE html>
                            &lt;html lang="fa">
                            &lt;head>
                                &lt;title>Test&lt;/title>
                            &lt;/head>
                            &lt;body>
                                &lt;script src="basic.js">&lt;/script>
                            &lt;/body>
                            &lt;/html>
                        </code>
                    </pre>
                    <p>
                        src مخفف source عه ، و یجور آدرس دهی برای معرفی فایل js شما به index.html عه :)
                    </p>
                </div>
            <h2 id="multiple-external-scripts">Multiple External Scripts (چند اسکریپتی خارجی)</h2>
                <div>
                    <p>
                        اینم میگم که در جریان باشید ، شما محدود به استفاده از فقط یکی از این روش ها نیستید و میتوند هم زمان از همشون استفاده کنید و
                        همچنین میتونید چندین فایل جاوا اسکریپت به فایل خودتون اضافه کنید ، مثلا فایل جدید بسازید به نام hello.js و دستور زیر رو توش قرار بدید :
                    </p>
                    <pre>
                        <code>
                            console.log('Salam');
                        </code>
                    </pre>
                    <p>و حالا در زیر فایل index.html با اشاره به چندین فایل خارجی رو شاهد هستید :) </p>
                    <pre>
                        <code class="language-html">
                            &lt;!DOCTYPE html>
                            &lt;html lang="fa">
                            &lt;head>
                                &lt;title>Test&lt;/title>
                            &lt;/head>
                            &lt;body>
                                &lt;script src="basic.js">&lt;/script>
                                &lt;script src="hello.js">&lt;/script>
                            &lt;/body>
                            &lt;/html>
                        </code>
                    </pre>
                    <p>
                        اینم بگم که اگر فایل های js رو کنار فایل index.html ساختیت میتونید از آدرس دهی بالا استفاده کنید (یعنی مثل زیر پوشه بندی کردید :)
                    </p>
                    <pre class="language-treeview">
                        <code class="language-treeview">
                            Your_Folder
                                index.html
                                basic.js
                                hello.js
                        </code>
                    </pre>
                    <p>
                        و اگر هم میخواید منظم تر باشید و مثل زیر پوشه بندی کردید :
                    </p>
                    <pre class="language-treeview">
                        <code class="language-treeview">
                            Your_Folder
                                index.html
                                js_Folder
                                    basic.js
                                    hello.js
                        </code>
                    </pre>
                    <P>
                        باید دستورات بالا را به این صورت وارد کنید :
                    </P>
                    <pre>
                        <code class="language-html">
                            &lt;!DOCTYPE html>
                            &lt;html lang="fa">
                            &lt;head>
                                &lt;title>Test&lt;/title>
                            &lt;/head>
                            &lt;body>
                                &lt;script src="js_Folder/basic.js">&lt;/script>
                                &lt;script src="js_Folder/hello.js">&lt;/script>
                            &lt;/body>
                            &lt;/html>
                        </code>
                    </pre>
                    <P>
                        هر اسلش (/) به معنی ورود به پوشه بعدی است (هرجا که فایل موجود است مسیر دهی از همان مسیر شروع میشود!)
                    </P>
                </div>
        <h1 id="introduction-to-data-types">مقدمه ایی بر انواع داده</h1>
            <div>
                <p>
                    در اکثر زبان های برنامه نویسی انواع مختلف داده هارو داریم و جاوا اسکریپت هم از این قضیه مستثنی نیست!
                     قبل از بررسی انواع داده ها شاید براتون سوال باشه که انواع داده یعنی چی اصن ؟ چه نیازی بهش داریم ؟ انواع داده ها به ما کمک میکنند
                    تا بتونیم داده های دریافتی رو دسته بندی و مرتب کنیم و به گونه ایی بتونیم باهاشون کار کنیم ، برای مثال در دنیای واقعی اگر کسی از شما بپرسه چند سالتونه یه عدد میگید و اگر اسمتونو بپرسه یه رشته از حروف میگید (حالا فرض کنید به جای رشته ایی از حروف از اعداد استفاده کنید (حتی اگه با الگوی قابل بررسی هم جای اسم عدد بگید فهمیدن اسمتون برای طرف سخت میشه))
                    <br>
                    پس یکی از مواردی که به انواع داده نیاز داریم ، اینه که از هر نوع داده ایی در جای خودش استفاده کنیم (مثال دیگه ایی که میتونم بزنم اینه ، که وقتی ازتون میپرسن موافق جمهوری اسلامی هستید ؟ جواب میدید آره یا نه وسط بازی نداریم ، پس در اینجا اصلا نیازی به اعداد و حروف هم نیست )
                </p>
            </div>
            <h2 id="numbers">Numbers (اعداد)</h2>
                <div>
                    <p>
                        همونجوری که روشه این نوع داده اعداد رو در بر میگیره و خودش به دو بخش زیر تقسیم میشه :
                    </p>
                    <ol>
                        <li>     int : اعداد صحیح (اعداد منفی ، صفر و اعداد مثبت) مثل : 0 ، 24 ، 56 ، 67- و بقیه اعداد صحیح</li>
                        <li>              float : اعداد ممیر شناور (همون اعداد اعشاری) مثل : 1/3 و 14/56 و 13/33- و اعداد اعشاری دیگر</li>
                        در زیر چند مثال در جاوا اسکریپت میبینید
                    </ol>
                    <pre>
                        <code>
                            Console.log(12.3) // Float Number
                            Console.log(13) // Integer Number
                        </code>
                    </pre>
                </div>
            <h2 id="strings">Strings (رشته ها)</h2>
                <div>
                    <p>
                        تا اینجا احتمالا دیگه بدونید رشته ها چی هستند ، ولی بازم یبار دیگه میگم : رشته ها مجموعه ایی از کارکتر ها هستند که بین تک کوتیشن (') یا دابل کوتیشن (") قرار گرفتن !
                    </p>
                    <pre>
                        <code>
                            Console.log("Hello World") // String
                            Console.log("13") // اینم یه رشته است و عدد نیست ، توجه کنید که داخل کوتیشن قرار داره
                        </code>
                    </pre>
                </div>
            <h2 id="booleans">Booleans (درست یا نادرست)</h2>
                <div>
                    <p>مقدار بولی دقیقا مانند همون سوال همیشگیه که گفتم موافق جمهوری اسلامی هستید یا نه ؟ جواب این سوال فقط بله و خیره و وسط بازی نداریم ، دقیقا مقادیر بولی هم همین هستند و فقط درست و نادرست رو برمیگردونن. </p>
                    <pre>
                        <code>
                            Console.log(true) // True
                            Console.log(false) // False
                        </code>
                    </pre>
                </div>

            <h2 id="undefined">Undefined (تعریف نشده)</h2>
                <div>
                    <p>
                        همانطور که از اسم این نوع داده مشخصه ، یعنی نوع داده آن مشخص نشده و در جاوا اسکریپت وقتی نوع داده
                        برابر با تعریف نشده میشه که ما متغیری تعریف کنیم و به آن مقداری ندهیم ، و یا به المانی اشاره کنیم که مقداری نداشته باشد
                        (همچنین اگر تابع مقداری را باز نگرداند هم نوع داده تعریف نشده است ، میتوانید تابع console.log را بدون آرگومان صدا بزنید تا متوجه بشید)
                    </p>
                    <pre>
                        <code>
                            var hello;
                            console.log(hello); //Undefined

                            console.log() //Undefined
                        </code>
                    </pre>
                    <p>
                        توجه داشته باشید که در زبان جاوا اسکریپت نیازی به پایان دادن دستورات نیست ، ولی برای نظم و نخوردن مشکل بهتر است بعد از هر دستور از سیمی کالن (;) استفاده کنید
                    </p>
                </div>
            <h2 id="null">Null (خالی)</h2>
                <div>
                    <p>
                        نوع داده دیگری که در جاوا اسکریپت موجوده ، null عه که به معنی خالیه ؛ دقیقا این نوع داده خالیه (حواستون باشه که این نوع داده ینی هیچی هیچی داخلش نیست و برابر با 0 یا ' ' نیست)
                    </p>
                    <pre>
                        <code>
                            var emptyValue = null ;

                            var string = ' ' ; //این متغیر خالی نیست و نوع داده استرینگ است
                        </code>
                    </pre>
                </div>
        <h1 id="checking-data-types">بررسی انواع داده</h1>
            <div>
                <p>
                    یکی از دستورات مهمی که میتونه بهتون توی شناخت نوع داده کمک کنه typeof است ، این عملگر نوع داده متغیر یا آرگومان شما را برمیگرداند ، مثال زیرو یه نگاه بندازید :
                </p>
                <pre>
                    <code>
                        console.log(typeof 'AmirRoox') // string
                        console.log(typeof 13) // number
                        console.log(typeof true) // boolean
                        console.log(typeof null) // object type (Null)
                        console.log(typeof undefined) // undefined
                    </code>
                </pre>
            </div>
        <h1 id="comments-again">کامنت فراموش نشه!</h1>
            <div>
                <p>
                    باز یبار دیگه این پایین تکرار میکنم کامنت برای کداتون فراموش نشه !!!
                </p>
                <pre>
                    <code>
                        // من کامنتم

                        /*
                        منم کامنتم
                        ولی از نوع
                        چند خطی
                        */
                    </code>
                </pre>
            </div>
        <h1 id="variables">متغیر ها</h1>
            <div>
                <p>
                    به مهم ترین بخش امروز یعنی متغیر ها رسیدیم ! اول بزارید بگم متغیر اصلا چیه؟متغیر یه فضا داخل حافظه است و ما ازشون استفاده میکنیم تا داده مورد نیازمون
                    رو داخل یه مکان از حافظه ذخیره کنیم و هروقت نیاز بهش داشتیم فراخونیش کنیم.وقتی برای اولین بار یه متغیر ایجاد میشه یه مکان حافظه رزرو میشه (عین خرید بلیط کنسرت که وقتی ثبت نام میکنی رزرو میکنیش و کسی نمیتونه دیگه ازش استفاده کنه)
                    و وقتی یه مقدار به اون متغیر پاس (اختصاص) میدی ، اون جایگاه رزرو شده پر میشه (یعنی دیگه الان رسیدی وسط کنسرت و سر جات نشستی)
                    <br>
                    در زبان جاوا اسکریپت با سه کلمه کلیدی (کلمه کلیدی یعنی از قبل رزرو شده و شما نمیتونید از این اسم ها برای اسم تابع یا متغیر استفاده کنید)
                    var ، let و const میشه متغیر ساخت که جلوتر میگم فرقشون باهم چیه!
                    <br>
                    رسیدیم جلوتر 😁 تا فرق بین این 3 کلمه کلیدی رو بگم ؛ کلمه کلیدی var بهتون پیشنهاد میکنم ازش استفاده نکنید چون ممکنه باعث خطا بشه و به جای این کلمه کلیدی میتونید از
                    let استفاده کنید (فرق اساسی let و var در حوزه یا scope شونه ، حالا اینی که من میگم یعنی چی؟ برای درک بهتر دستور زیر رو ببینید)

                </p>
                <pre>
                    <code>
                        let times = 4;
                        if (times > 3) {
                            let times = 13 ;
                        }
                        console.log(times);
                    </code>
                </pre>
                <p>
                    اگه دستورات بالا رو نمیفهمید اشکالی نداره فقط یه مثال زدم برای اینکه فرق بین let و var رو بفهمید ؛
                    اسکوپ (Scope) یا حوزه، به جاهایی گفته میشه که متغیرها قابل دسترسی و استفاده هستن و در دستور بالا دو حوزه داریم (حوزه اول کل کد هست و حوزه دوم داخل دستور if که با آکولاد باز و بسته شده) ، در واقع یکی از روش های شناخت اسکوپ ها
                     دیدن باز و بسته شدن آکولادعه که ما اینجا میبینیم.
                    اگر توجه کنید ما دو متغیر times تعریف کردیم و در پایین آن را صدا زدیم ، به نظرتون 4 چاپ میشه یا 13 ؟
                    من بهتون میگم 4 چاپ میشه ، این دقیقا فرق اصلی let و var عه ، وقتی از let استفاده میکنید هر متغیری که تعریف کردید
                    فقط در حوزه (اسکوپ) خودش قابل دسترسی یا صدا زدنه و خارج از حوزه خودش اگر تعریف نشده باشه ، قابل دسترسی نیست.
                    <br>
                    اما در مورد var قضیه فرق داره و این کلمه کلیدی هر متغیری که ایجاد میکنه در تمام حوزه (اسکوپ ها) قابل دسترسیه ، یعنی به طور کلی
                    اگر دستور بالا رو با var تعویض کنیم دیگه هر متغیر اسکوپ مختص به خودش رو نداره و از همجا قابل دسترسیه و همین موضوع
                    باعث میشه به مشکل بخوریم ، مثلا تو همین مثال بالا دیگه 4 چاپ نمیشه و بجاش 13 چاپ میشه (شاید بپرسید خب مشکلش کجاست ؟ مشکل اوونجاییه که شما دستورات زیادی داشته باشید و حواستون نباشه که قبلا به همین نام متغیر ایجاد کردید و این اشتباه باعث میشه داده شده overwrite بشه (یعنی داده جدید روی داده قبلی نوشته بشه و اطلاعات قبلیتون از دستتون در بره!))
                    <br>
                    حالا فرق این دوتا رو گفتیم ولی const به چه معناست ؟ این کلمه کلیدی خیلی ساده است و به معنی ثابته! یعنی متغیری که مقدارش ثابته و تغییر نمیکنه!
                    مثلا یه متغیر به نام PI که عدد پی رو در خودش نگه میداره (عدد پی همیشه 3.14 عه و هیچ وقت تغییر نمیکنه) ، برای این متغیر های ثابت
                    از const استفاده میکنیم که در ادامه کد نویسی سهوا یا عمدا مقدارش رو تغییر ندیم.
                    <br>
                    تعریف متغیر به شکل زیر انجام میشه :
                </p>
                <pre>
                    <code>
                        let name = "Amir";
                        var age = 21 ;
                        const sex = "Male"

                        /*
                        در سمت چپ کلمه کلیدی ، سپس اسم متغیر را وارد میکنید
                        برای مقدار دهی میتوانید جلوی نام متغیر مساوی (علامت انتساب)
                        بزارید و مقدار مورد نظرتون رو بهش اختصاص بدید
                        */

                    </code>
                </pre>
                <p>              همچنین باید یادتون باشه اسمی که انتخاب میکنید درست باشه من این زیر مواردی که باید ازش پیروی کنید برای نام گزاری رو اوردم</p>
                <ol>
                    <li>نام متغیر نباید با عدد شروع بشه (کیو دیدید اول اسمش عدد باشه (باز میشه یکیو ممد 1 یا ممد 2 صدا کرد و 1ممد من نشنیدم))</li>
                    <li>از علامت های خاص نمیتونید برای اسم متغیر استغاده کنید (فقط حروف انگلیسی ، اعداد ، _ و $ قابل استفاده هستند)</li>
                    <li>بهتره برای نام گزاری از camelCase استفاده کنید (یک نوع روش نام گذاریه که اول کلمات کوچیکه و اول کلمات بعدی بزرگ ، شبیه کوهان شتر)</li>
                    <li>همچنین متغیرها نمیتونن فاصله داشته باشند و فقط حروف انگلیسی قابل قبوله</li>
                    این زیر چند نوع متغیر درست و نادرست براتون اوردم
                </ol>
                <pre>
                    <code>
                        // دقت کنید به نوع نام گذاری متغیر ها
                        //این زیریا درستن
                        firstName
                        country
                        age
                        isRasht
                        num13

                        //این زیریا غلطن
                        متغیر1
                        name 1
                        number!Age
                        AgeNumber*
                    </code>
                </pre>
                <p>روش های نام گذاری متفاوتی برای متغیر ها وجود داره ولی اکثرا در جاوا اسکریپت از همین روش شتری استفاده میکنن!</p>
                <p>بازم این زیر چنتا مثال از تعریف متغیر میزنم به روش های مختلف که بیشتر آشنا بشید</p>
                <pre>
                    <code>
                        let name ;   // فقط متغیر رو تعریف کردم و مقداری بهش ندادم
                        let Age = 21; // integer
                        const PI = 13.4 //Float

                        name = "Amir Roox" ;  //اینجا به همون متغیر بالایی مقدار دادم
                    </code>
                </pre>
            </div>
    <h1 id="day-1-exercises">تمرینات روز اول</h1>
        <div>
            <p>
                آفرین آفرین خسته نباشی ، روز اولت تموم شد ، اگه دوست داری میتونی بری بیشتر مطالعه کنی و حتما تمرین یادت نره ؛ اگر هم اینارو بلد بودی تمرینای زیر رو حتما انجام بده (کلا این تمرینا رو انجام بدیددددد)
                و اگر امروزو خوب یاد گرفتی میتونی بری روز دومو ادامه بدی :)
            </p>
            <ol>
                <li>یه کامنت بنویسید که توش نوشته باشه کامنت خیلی خوبه ، برای هر کدی نیازه!</li>
                <li>یه کامنت چند خطی بنویسید و درمورد امروز توضیح بدید</li>
                <li>یه فایل js بسازید و توش 4 نوع متغیر از 4 نوع مختلف تعریف کنید</li>
                <li>فایل دیگه ایی ایجاد کنید و از عملگر typeof برای بررسی انواع داده استفاده کنید</li>
                <li>بدون مقدار دهی 10 متغیر ایجاد کنید</li>
                <li>2 متغیر با مقادیر رشته ایی و 2 متغیر با اعداد اعشاری ایجاد کنید</li>
                <li>متغیر هایی به نام name, Age, Country با مشخصات خودتون ایجاد کنید</li>
                <li>متغیر هایی که در بالا ایجاد کردید رو به ترتیب در console چاپ کنید</li>
                <li>متغیر هایی که در بالا ایجاد کردید رو به ترتیب به صورت هشدار نمایش بدید</li>
            </ol>
            <pre>
                <code>
                    console.log("خسته نباشید");
                </code>
            </pre>
        </div>
</article>
<!-- End Article -->

<!-- Start Previous and Next Days -->
<div class="container Pre_Nex mg2b">
    <div class="row">
        <a href="<?='day'.$test[1]?>" class="col-xs-6 col-md-2">
            &rarr;
            روز بعدی (
            <?=$test[1] ?>
            )
        </a>
        <div class="xs-hidden col-md-8"></div>
    </div>
</div>
<!-- End Previous and Next Days -->

<!-- END MAIN -->

<!-- Up Button -->
<?php include MAIN_DIR . 'public/Main/Top_Button.php'?>
<!-- Down Button -->
<?php include MAIN_DIR . 'public/Main/To_Button.php'?>

<!-- Community -->
<?php require MAIN_DIR . "public/Main/Community.php" ?>
<!-- End Community -->
<!-- FOOTER -->
<?php require MAIN_DIR . "public/Main/Footer.php" ?>
<!-- END FOOTER -->


<!-- MAIN SCRIPT -->
<script src="<?= MAIN_SERVER . 'assets/vendor/jquery-3.7.0.min.js' ?>"></script>

<!-- Script For Response Menu -->
<script src="<?= MAIN_SERVER . 'assets/js/Response-Menu.js' ?>"></script>

<!-- Script For Prism -->
<script src="<?= MAIN_SERVER . 'assets/vendor/prism.js' ?>"></script>

<!-- Script Helper -->
<script src="<?= MAIN_SERVER . 'assets/js/Helper.js'?>"></script>

<!-- File Need It Code -->
<script src="<?= MAIN_SERVER . 'public/30Days/javascript/assets/FileNeedIt.js'?>"></script>

<!-- Scroll Function -->
<script src="<?= MAIN_SERVER . 'public/30Days/javascript/assets/script.js'?>"></script>
<!-- END MAIN SCRIPT-->
</body>
</html>